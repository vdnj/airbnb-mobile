{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignUpScreen(_ref) {\n  var setToken = _ref.setToken,\n      setId = _ref.setId;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordOne = _useState8[0],\n      setPasswordOne = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordTwo = _useState10[0],\n      setPasswordTwo = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isVisible = _useState12[0],\n      setIsVisible = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      requestProcessing = _useState14[0],\n      setRequestProcessing = _useState14[1];\n\n  var handleSignUpSubmit = function handleSignUpSubmit() {\n    var response, token, id;\n    return _regeneratorRuntime.async(function handleSignUpSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(passwordOne && email && username && description && passwordOne === passwordTwo)) {\n              _context.next = 22;\n              break;\n            }\n\n            _context.prev = 1;\n            setRequestProcessing(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.post(\"https://express-airbnb-api.herokuapp.com/user/sign_up\", {\n              email: email,\n              username: username,\n              description: description,\n              password: passwordOne\n            }));\n\n          case 5:\n            response = _context.sent;\n            console.log(response.data);\n            token = response.data.token;\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(setToken(token));\n\n          case 10:\n            id = response.data.id;\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(setId(id));\n\n          case 13:\n            _context.next = 19;\n            break;\n\n          case 15:\n            _context.prev = 15;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0.message);\n            Alert.alert(\"Email or Username already taken\", \"Please change it to sign up\");\n\n          case 19:\n            setRequestProcessing(false);\n            _context.next = 23;\n            break;\n\n          case 22:\n            if (passwordOne && passwordOne !== passwordTwo) {\n              Alert.alert(\"Passwords are different\", \"Please type again\");\n            } else {\n              Alert.alert(\"Element missing\", \"Add it and try again\");\n            }\n\n          case 23:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 15]], Promise);\n  };\n\n  return requestProcessing ? _jsxs(View, {\n    style: styles.waitScreen,\n    children: [_jsx(Text, {\n      children: \"Request in process\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    })]\n  }) : _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Email: \"\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(mail) {\n          return setEmail(mail);\n        }\n      }), _jsx(Text, {\n        children: \"Username: \"\n      }), _jsx(TextInput, {\n        placeholder: \"Username\",\n        onChangeText: function onChangeText(name) {\n          return setUsername(name);\n        }\n      }), _jsx(Text, {\n        children: \"Description: \"\n      }), _jsx(TextInput, {\n        placeholder: \"Describe yourself in a few words...\",\n        multiline: true,\n        numberOfLines: 4,\n        onChangeText: function onChangeText(desc) {\n          return setDescription(desc);\n        }\n      }), _jsx(Text, {\n        children: \"Password: \"\n      }), _jsxs(View, {\n        style: styles.passInput,\n        children: [_jsx(TextInput, {\n          placeholder: \"Password\",\n          secureTextEntry: isVisible ? false : true,\n          onChangeText: function onChangeText(passOne) {\n            return setPasswordOne(passOne);\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return isVisible ? setIsVisible(false) : setIsVisible(true);\n          },\n          children: _jsx(Text, {\n            children: \"\\uD83D\\uDC41 \"\n          })\n        })]\n      }), _jsx(Text, {\n        children: \"Password: \"\n      }), _jsxs(View, {\n        style: styles.passInput,\n        children: [_jsx(TextInput, {\n          placeholder: \"Confirm password\",\n          secureTextEntry: isVisible ? false : true,\n          onChangeText: function onChangeText(passTwo) {\n            return setPasswordTwo(passTwo);\n          }\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return isVisible ? setIsVisible(false) : setIsVisible(true);\n          },\n          children: _jsx(Text, {\n            children: \"\\uD83D\\uDC41 \"\n          })\n        })]\n      }), _jsx(Button, {\n        title: \"Sign up\",\n        onPress: handleSignUpSubmit\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  passInput: {\n    flexDirection: \"row\"\n  },\n  waitScreen: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/vdnj/Documents/le_reacteur/react-native/airbnb/containers/SignUpScreen.js"],"names":["useState","axios","AsyncStorage","SignUpScreen","setToken","setId","email","setEmail","username","setUsername","description","setDescription","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","isVisible","setIsVisible","requestProcessing","setRequestProcessing","handleSignUpSubmit","post","password","response","console","log","data","token","id","message","Alert","alert","styles","waitScreen","mail","name","desc","passInput","passOne","passTwo","StyleSheet","create","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  StyleSheet,\n  Alert,\n  ActivityIndicator,\n} from \"react-native\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport default function SignUpScreen({ setToken, setId }) {\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [passwordOne, setPasswordOne] = useState(\"\");\n  const [passwordTwo, setPasswordTwo] = useState(\"\");\n\n  const [isVisible, setIsVisible] = useState(false);\n  const [requestProcessing, setRequestProcessing] = useState(false);\n\n  const handleSignUpSubmit = async () => {\n    if (\n      passwordOne &&\n      email &&\n      username &&\n      description &&\n      passwordOne === passwordTwo\n    ) {\n      try {\n        setRequestProcessing(true);\n        const response = await axios.post(\n          \"https://express-airbnb-api.herokuapp.com/user/sign_up\",\n          { email, username, description, password: passwordOne }\n        );\n        console.log(response.data);\n        const token = response.data.token;\n        await setToken(token);\n        const id = response.data.id;\n        await setId(id);\n      } catch (error) {\n        console.log(error.message);\n        Alert.alert(\n          \"Email or Username already taken\",\n          \"Please change it to sign up\"\n        );\n      }\n      setRequestProcessing(false);\n    } else if (passwordOne && passwordOne !== passwordTwo) {\n      Alert.alert(\"Passwords are different\", \"Please type again\");\n    } else {\n      Alert.alert(\"Element missing\", \"Add it and try again\");\n    }\n  };\n\n  return requestProcessing ? (\n    <View style={styles.waitScreen}>\n      <Text>Request in process</Text>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  ) : (\n    <View>\n      <View>\n        <Text>Email: </Text>\n        <TextInput\n          placeholder=\"Email\"\n          onChangeText={(mail) => setEmail(mail)}\n        />\n        <Text>Username: </Text>\n        <TextInput\n          placeholder=\"Username\"\n          onChangeText={(name) => setUsername(name)}\n        />\n        <Text>Description: </Text>\n        <TextInput\n          placeholder=\"Describe yourself in a few words...\"\n          multiline={true}\n          numberOfLines={4}\n          onChangeText={(desc) => setDescription(desc)}\n        />\n        <Text>Password: </Text>\n        <View style={styles.passInput}>\n          <TextInput\n            placeholder=\"Password\"\n            secureTextEntry={isVisible ? false : true}\n            onChangeText={(passOne) => setPasswordOne(passOne)}\n          />\n          <TouchableOpacity\n            onPress={() =>\n              isVisible ? setIsVisible(false) : setIsVisible(true)\n            }\n          >\n            <Text>👁 </Text>\n          </TouchableOpacity>\n        </View>\n        <Text>Password: </Text>\n        <View style={styles.passInput}>\n          <TextInput\n            placeholder=\"Confirm password\"\n            secureTextEntry={isVisible ? false : true}\n            onChangeText={(passTwo) => setPasswordTwo(passTwo)}\n          />\n          <TouchableOpacity\n            onPress={() =>\n              isVisible ? setIsVisible(false) : setIsVisible(true)\n            }\n          >\n            <Text>👁 </Text>\n          </TouchableOpacity>\n        </View>\n        <Button title=\"Sign up\" onPress={handleSignUpSubmit} />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  passInput: {\n    flexDirection: \"row\",\n  },\n  waitScreen: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}