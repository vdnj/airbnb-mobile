{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useRoute } from \"@react-navigation/core\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState, useEffect } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen(_ref) {\n  var id = _ref.id,\n      token = _ref.token,\n      setId = _ref.setId,\n      setToken = _ref.setToken;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var config, response, _data;\n\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              config = {\n                headers: {\n                  Authorization: \"Bearer \" + token\n                }\n              };\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(\"https://express-airbnb-api.herokuapp.com/user/\" + id, config));\n\n            case 4:\n              response = _context.sent;\n              console.log(response.data);\n              _data = response.data;\n              setData(_data);\n              setIsLoading(false);\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    };\n\n    fetchData();\n  }, []);\n  return isLoading ? _jsxs(View, {\n    style: styles.waitScreen,\n    children: [_jsx(Text, {\n      children: \"Request in process\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    })]\n  }) : _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [\"user id : \", id]\n    }), _jsxs(View, {\n      style: styles.profilePicBloc,\n      children: [_jsx(Image, {\n        source: data.photo ? {\n          uri: data.photo\n        } : require(\"../assets/defaultProfilePic.jpeg\"),\n        style: styles.profilePic\n      }), _jsxs(View, {\n        style: styles.profilePicSelect,\n        children: [_jsx(Ionicons, {\n          name: \"image-outline\",\n          size: 30,\n          color: \"grey\",\n          style: styles.icon\n        }), _jsx(Ionicons, {\n          name: \"camera-outline\",\n          size: 30,\n          color: \"grey\",\n          style: styles.icon\n        })]\n      }), _jsx(TextInput, {\n        style: {\n          height: 44,\n          borderBottomColor: \"tomato\",\n          borderBottomWidth: 1\n        },\n        onChangeText: function onChangeText(text) {\n          setEmail(text);\n        },\n        value: data.email\n      })]\n    }), _jsx(Button, {\n      title: \"Log Out\",\n      onPress: function onPress() {\n        props.setToken(null);\n        props.setId(null);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  waitScreen: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  profilePicBloc: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  profilePic: {\n    height: 150,\n    width: 150,\n    borderRadius: 100,\n    borderWidth: 2,\n    borderColor: \"tomato\"\n  },\n  icon: {\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/Users/vdnj/Documents/le_reacteur/react-native/airbnb/containers/ProfileScreen.js"],"names":["useRoute","useState","useEffect","Ionicons","axios","ProfileScreen","id","token","setId","setToken","data","setData","isLoading","setIsLoading","email","setEmail","fetchData","config","headers","Authorization","get","response","console","log","message","styles","waitScreen","container","profilePicBloc","photo","uri","require","profilePic","profilePicSelect","icon","height","borderBottomColor","borderBottomWidth","text","props","StyleSheet","create","justifyContent","alignItems","flex","flexDirection","width","borderRadius","borderWidth","borderColor","margin"],"mappings":"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","sourcesContent":["import { useRoute } from \"@react-navigation/core\";\nimport { Text, View, StyleSheet, Button, Image, TextInput } from \"react-native\";\nimport { useState, useEffect } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport axios from \"axios\";\n\nexport default function ProfileScreen({ id, token, setId, setToken }) {\n  // const { params } = useRoute();\n\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState();\n\n  const [email, setEmail] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const config = {\n          headers: { Authorization: `Bearer ${token}` },\n        };\n        const response = await axios.get(\n          `https://express-airbnb-api.herokuapp.com/user/${id}`,\n          config\n        );\n        console.log(response.data);\n        const data = response.data;\n        setData(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return isLoading ? (\n    <View style={styles.waitScreen}>\n      <Text>Request in process</Text>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  ) : (\n    <View style={styles.container}>\n      {/* <Text>user id : {params.userId}</Text> */}\n      <Text>user id : {id}</Text>\n      <View style={styles.profilePicBloc}>\n        <Image\n          source={\n            data.photo\n              ? { uri: data.photo }\n              : require(\"../assets/defaultProfilePic.jpeg\")\n          }\n          style={styles.profilePic}\n        />\n        <View style={styles.profilePicSelect}>\n          <Ionicons\n            name={\"image-outline\"}\n            size={30}\n            color={\"grey\"}\n            style={styles.icon}\n          />\n          <Ionicons\n            name={\"camera-outline\"}\n            size={30}\n            color={\"grey\"}\n            style={styles.icon}\n          />\n        </View>\n        <TextInput\n          style={{\n            height: 44,\n            borderBottomColor: \"tomato\",\n            borderBottomWidth: 1,\n          }}\n          onChangeText={(text) => {\n            setEmail(text);\n          }}\n          value={data.email}\n        />\n      </View>\n      <Button\n        title=\"Log Out\"\n        onPress={() => {\n          props.setToken(null);\n          props.setId(null);\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  waitScreen: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  profilePicBloc: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  profilePic: {\n    height: 150,\n    width: 150,\n    borderRadius: 100,\n    borderWidth: 2,\n    borderColor: \"tomato\",\n  },\n  icon: {\n    margin: 10,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}