{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport RoomCard from \"../components/RoomCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      rooms = _useState2[0],\n      setRooms = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      var response;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"https://express-airbnb-api.herokuapp.com/rooms\"));\n\n            case 3:\n              response = _context.sent;\n              setRooms(response.data);\n              setIsLoading(false);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    };\n\n    fetchData();\n  }, []);\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(RoomCard, {\n      title: item.title,\n      roomPic: item.photos[0].url,\n      price: item.price,\n      rating: item.ratingValue,\n      numOfRating: item.reviews,\n      profilePic: item.user.account.photo.url,\n      id: item._id\n    });\n  };\n\n  return isLoading ? _jsxs(View, {\n    style: styles.waitScreen,\n    children: [_jsx(Text, {\n      children: \"Request in process\"\n    }), _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"#0000ff\"\n    })]\n  }) : _jsx(View, {\n    children: _jsx(FlatList, {\n      data: rooms,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item._id;\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  waitScreen: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/vdnj/Documents/le_reacteur/react-native/airbnb/containers/HomeScreen.js"],"names":["useNavigation","useState","useEffect","axios","RoomCard","HomeScreen","navigation","rooms","setRooms","isLoading","setIsLoading","fetchData","get","response","data","console","log","message","renderItem","item","title","photos","url","price","ratingValue","reviews","user","account","photo","_id","styles","waitScreen","StyleSheet","create","justifyContent","alignItems"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,wBAA9B;;;;;;;;AAUA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAMC,UAAU,GAAGN,aAAa,EAAhC;;AAEA,kBAA0BC,QAAQ,EAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkCP,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOQ,SAAP;AAAA,MAAkBC,YAAlB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAESR,KAAK,CAACS,GAAN,CACrB,gDADqB,CAFT;;AAAA;AAERC,cAAAA,QAFQ;AAKdL,cAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAV,CAAR;AACAJ,cAAAA,YAAY,CAAC,KAAD,CAAZ;AANc;AAAA;;AAAA;AAAA;AAAA;AAQdK,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAMC,OAAlB;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAWAN,IAAAA,SAAS;AACV,GAbQ,EAaN,EAbM,CAAT;;AAeA,MAAMO,UAAU,GAAG,SAAbA,UAAa,OAAc;AAAA,QAAXC,IAAW,QAAXA,IAAW;AAC/B,WACE,KAAC,QAAD;AACE,MAAA,KAAK,EAAEA,IAAI,CAACC,KADd;AAEE,MAAA,OAAO,EAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,GAF1B;AAGE,MAAA,KAAK,EAAEH,IAAI,CAACI,KAHd;AAIE,MAAA,MAAM,EAAEJ,IAAI,CAACK,WAJf;AAKE,MAAA,WAAW,EAAEL,IAAI,CAACM,OALpB;AAME,MAAA,UAAU,EAAEN,IAAI,CAACO,IAAL,CAAUC,OAAV,CAAkBC,KAAlB,CAAwBN,GANtC;AAOE,MAAA,EAAE,EAAEH,IAAI,CAACU;AAPX,MADF;AAWD,GAZD;;AAcA,SAAOpB,SAAS,GACd,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEqB,MAAM,CAACC,UAApB;AAAA,eACE,KAAC,IAAD;AAAA;AAAA,MADF,EAEE,KAAC,iBAAD;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,KAAK,EAAC;AAAtC,MAFF;AAAA,IADc,GAMd,KAAC,IAAD;AAAA,cACE,KAAC,QAAD;AACE,MAAA,IAAI,EAAExB,KADR;AAEE,MAAA,UAAU,EAAEW,UAFd;AAGE,MAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,eAAUA,IAAI,CAACU,GAAf;AAAA;AAHhB;AADF,IANF;AAoBD;AAED,IAAMC,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,UAAU,EAAE;AACVG,IAAAA,cAAc,EAAE,QADN;AAEVC,IAAAA,UAAU,EAAE;AAFF;AADmB,CAAlB,CAAf","sourcesContent":["import { useNavigation } from \"@react-navigation/core\";\nimport {\n  Button,\n  Text,\n  View,\n  StyleSheet,\n  ActivityIndicator,\n  ScrollView,\n  FlatList,\n} from \"react-native\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport RoomCard from \"../components/RoomCard\";\n\nexport default function HomeScreen() {\n  const navigation = useNavigation();\n\n  const [rooms, setRooms] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          \"https://express-airbnb-api.herokuapp.com/rooms\"\n        );\n        setRooms(response.data);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const renderItem = ({ item }) => {\n    return (\n      <RoomCard\n        title={item.title}\n        roomPic={item.photos[0].url}\n        price={item.price}\n        rating={item.ratingValue}\n        numOfRating={item.reviews}\n        profilePic={item.user.account.photo.url}\n        id={item._id}\n      />\n    );\n  };\n\n  return isLoading ? (\n    <View style={styles.waitScreen}>\n      <Text>Request in process</Text>\n      <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n    </View>\n  ) : (\n    <View>\n      <FlatList\n        data={rooms}\n        renderItem={renderItem}\n        keyExtractor={(item) => item._id}\n      />\n      {/* <Button\n        title=\"Go to Profile\"\n        onPress={() => {\n          navigation.navigate(\"Profile\", { userId: 123 });\n        }}\n      /> */}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  waitScreen: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}