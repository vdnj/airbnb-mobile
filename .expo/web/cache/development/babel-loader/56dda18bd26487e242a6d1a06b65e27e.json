{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useNavigation } from \"@react-navigation/core\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignInScreen(_ref) {\n  var setToken = _ref.setToken;\n  var navigation = useNavigation();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var handleSignInSubmit = function handleSignInSubmit() {\n    var response;\n    return _regeneratorRuntime.async(function handleSignInSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(email && password)) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(\"https://express-airbnb-api.herokuapp.com/user/log_in\", {\n              email: email,\n              password: password\n            }));\n\n          case 4:\n            response = _context.sent;\n            console.log(response.status);\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n\n          case 10:\n            _context.next = 13;\n            break;\n\n          case 12:\n            console.log(\"Not sending request\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  return _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Email: \"\n      }), _jsx(TextInput, {\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(mail) {\n          setEmail(mail);\n        }\n      }), _jsx(Text, {\n        children: \"Password: \"\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(pass) {\n          return setPassword(pass);\n        }\n      }), _jsx(Button, {\n        title: \"Sign in\",\n        onPress: handleSignInSubmit\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate(\"SignUp\");\n        },\n        children: _jsx(Text, {\n          children: \"Create an account\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/vdnj/Documents/le_reacteur/react-native/airbnb/containers/SignInScreen.js"],"names":["useNavigation","useState","axios","SignInScreen","setToken","navigation","email","setEmail","password","setPassword","handleSignInSubmit","post","response","console","log","status","mail","pass","navigate"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,wBAA9B;;;;;;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,YAAT,OAAoC;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACjD,MAAMC,UAAU,GAAGL,aAAa,EAAhC;;AAEA,kBAA0BC,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACrBJ,KAAK,IAAIE,QADY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAGEN,KAAK,CAACS,IAAN,CACrB,sDADqB,EAErB;AAAEL,cAAAA,KAAK,EAALA,KAAF;AAASE,cAAAA,QAAQ,EAARA;AAAT,aAFqB,CAHF;;AAAA;AAGfI,YAAAA,QAHe;AAOrBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB;AAPqB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAUvBF,YAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAVuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAcA,SACE,KAAC,IAAD;AAAA,cACE,MAAC,IAAD;AAAA,iBACE,KAAC,IAAD;AAAA;AAAA,QADF,EAEE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,YAAY,EAAE,sBAACE,IAAD,EAAU;AACtBT,UAAAA,QAAQ,CAACS,IAAD,CAAR;AACD;AAJH,QAFF,EAQE,KAAC,IAAD;AAAA;AAAA,QARF,EASE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,eAAe,EAAE,IAFnB;AAGE,QAAA,YAAY,EAAE,sBAACC,IAAD;AAAA,iBAAUR,WAAW,CAACQ,IAAD,CAArB;AAAA;AAHhB,QATF,EAcE,KAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEP;AAAjC,QAdF,EAeE,KAAC,gBAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbL,UAAAA,UAAU,CAACa,QAAX,CAAoB,QAApB;AACD,SAHH;AAAA,kBAKE,KAAC,IAAD;AAAA;AAAA;AALF,QAfF;AAAA;AADF,IADF;AA2BD","sourcesContent":["import { useNavigation } from \"@react-navigation/core\";\nimport { Button, Text, TextInput, View, TouchableOpacity } from \"react-native\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function SignInScreen({ setToken }) {\n  const navigation = useNavigation();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleSignInSubmit = async () => {\n    if (email && password) {\n      try {\n        const response = await axios.post(\n          \"https://express-airbnb-api.herokuapp.com/user/log_in\",\n          { email, password }\n        );\n        console.log(response.status);\n      } catch (error) {}\n    } else {\n      console.log(\"Not sending request\");\n    }\n  };\n\n  return (\n    <View>\n      <View>\n        <Text>Email: </Text>\n        <TextInput\n          placeholder=\"Email\"\n          onChangeText={(mail) => {\n            setEmail(mail);\n          }}\n        />\n        <Text>Password: </Text>\n        <TextInput\n          placeholder=\"Password\"\n          secureTextEntry={true}\n          onChangeText={(pass) => setPassword(pass)}\n        />\n        <Button title=\"Sign in\" onPress={handleSignInSubmit} />\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate(\"SignUp\");\n          }}\n        >\n          <Text>Create an account</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\n// const userToken = \"secret-token\";\n// setToken(userToken);\n"]},"metadata":{},"sourceType":"module"}